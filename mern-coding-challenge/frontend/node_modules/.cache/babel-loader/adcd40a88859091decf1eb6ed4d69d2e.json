{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\mern-coding-challenge\\\\frontend\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { fetchPriceRanges } from '../app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  month\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getPriceRanges = async () => {\n      const result = await fetchPriceRanges(month);\n      setData(result);\n    };\n    getPriceRanges();\n  }, [month]);\n  const chartData = {\n    labels: data.map(item => `$${item._id}`),\n    datasets: [{\n      label: 'Number of Transactions',\n      data: data.map(item => item.count),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(BarChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","fetchPriceRanges","jsxDEV","_jsxDEV","BarChart","month","_s","data","setData","getPriceRanges","result","chartData","labels","map","item","_id","datasets","label","count","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/mern-coding-challenge/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { fetchPriceRanges } from '../app';\r\n\r\nconst BarChart = ({ month }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getPriceRanges = async () => {\r\n      const result = await fetchPriceRanges(month);\r\n      setData(result);\r\n    };\r\n    getPriceRanges();\r\n  }, [month]);\r\n\r\n  const chartData = {\r\n    labels: data.map((item) => `$${item._id}`),\r\n    datasets: [\r\n      {\r\n        label: 'Number of Transactions',\r\n        data: data.map((item) => item.count),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar data={chartData} />;\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,gBAAgB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,MAAM,GAAG,MAAMT,gBAAgB,CAACI,KAAK,CAAC;MAC5CG,OAAO,CAACE,MAAM,CAAC;IACjB,CAAC;IACDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMM,SAAS,GAAG;IAChBC,MAAM,EAAEL,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAK,IAAIA,IAAI,CAACC,GAAG,EAAE,CAAC;IAC1CC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,wBAAwB;MAC/BV,IAAI,EAAEA,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;MACpCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBAAOhB,OAAA,CAACH,GAAG;IAACO,IAAI,EAAEI;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACjB,EAAA,CAvBIF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}