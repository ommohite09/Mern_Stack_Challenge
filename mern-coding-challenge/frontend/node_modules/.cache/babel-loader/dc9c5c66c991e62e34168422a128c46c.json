{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\mern-coding-challenge\\\\frontend\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCategories } from '../api'; // Import the fetchCategories function from api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = ({\n  month\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const result = await fetchCategories(month); // Fetch categories for the specified month\n        setData(result);\n      } catch (error) {\n        console.error(\"Error fetching categories for pie chart:\", error);\n      }\n    };\n    if (month) {\n      // Ensure month is defined before fetching\n      getCategories();\n    }\n  }, [month]); // Run the effect whenever month changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Categories for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useEffect","useState","fetchCategories","jsxDEV","_jsxDEV","PieChart","month","_s","data","setData","getCategories","result","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/mern-coding-challenge/frontend/src/components/PieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchCategories } from '../api';  // Import the fetchCategories function from api.js\r\n\r\nconst PieChart = ({ month }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      try {\r\n        const result = await fetchCategories(month);  // Fetch categories for the specified month\r\n        setData(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories for pie chart:\", error);\r\n      }\r\n    };\r\n\r\n    if (month) {  // Ensure month is defined before fetching\r\n      getCategories();\r\n    }\r\n  }, [month]);  // Run the effect whenever month changes\r\n\r\n  return (\r\n    <div>\r\n      {/* Render your pie chart using the `data` here */}\r\n      {/* Example: <Pie data={data} /> */}\r\n      <h2>Categories for {month}</h2>\r\n      {/* Here, you can implement your Pie Chart rendering logic using a library like react-chartjs-2 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMT,eAAe,CAACI,KAAK,CAAC,CAAC,CAAE;QAC9CG,OAAO,CAACE,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IAED,IAAIN,KAAK,EAAE;MAAG;MACZI,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAE;;EAEd,oBACEF,OAAA;IAAAU,QAAA,eAGEV,OAAA;MAAAU,QAAA,GAAI,iBAAe,EAACR,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEV,CAAC;AAACX,EAAA,CA1BIF,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}